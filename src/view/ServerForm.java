/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import threads.ProcessClientRequestsThread;
import threads.RefreshUsersThread;
import threads.RunServerThread;
import util.User;
import view.table.ServerTableModel;

/**
 *
 * @author rastko
 */
public class ServerForm extends javax.swing.JFrame {
    
    private RunServerThread runServerThread;
    /**
     * Creates new form ServerForm
     */
    public ServerForm() {
        
        initComponents();
        setLocationRelativeTo(null);
        lblServerStatus.setText("Server is down.");
        lblServerStatus.setForeground(Color.red);
        RefreshUsersThread refresh = new RefreshUsersThread(this);
        refresh.start();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStartServer = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblIndex = new javax.swing.JLabel();
        btnStopServer = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblServerStatus = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuConfig = new javax.swing.JMenu();
        jmiDbAndServer = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Law Office Manager - Server");
        setResizable(false);

        btnStartServer.setText("Start server");
        btnStartServer.setFocusable(false);
        btnStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartServerActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        lblName.setText("Rastko Kisjelica");

        lblIndex.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lblIndex.setText("0095/2017");

        btnStopServer.setText("Stop server");
        btnStopServer.setFocusable(false);
        btnStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopServerActionPerformed(evt);
            }
        });

        jLabel3.setText("Server status:");

        lblServerStatus.setText("ServerStatus");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Active users"));

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblUsers);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuConfig.setText("Configuration");

        jmiDbAndServer.setText("Database and server");
        jmiDbAndServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDbAndServerActionPerformed(evt);
            }
        });
        menuConfig.add(jmiDbAndServer);

        jMenuBar1.add(menuConfig);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStopServer, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblIndex)
                                .addGap(31, 31, 31))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblServerStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(btnStartServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIndex)
                    .addComponent(btnStopServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblServerStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartServerActionPerformed
        if (runServerThread == null || !runServerThread.isAlive()) {
            try {
                runServerThread = new RunServerThread();
                runServerThread.start();
                lblServerStatus.setText("Server is running...");
                lblServerStatus.setForeground(Color.green);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error: Could not start server!" +ex.getMessage(),"Start server error" ,JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(ServerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnStartServerActionPerformed

    private void btnStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopServerActionPerformed
         if (runServerThread != null && runServerThread.getServerSocket().isBound()) {
            try {
                runServerThread.stopServerThread();
                lblServerStatus.setText("Server is down.");
                lblServerStatus.setForeground(Color.red);
                tblUsers.setModel(new ServerTableModel(new ArrayList<>()));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnStopServerActionPerformed

    private void jmiDbAndServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDbAndServerActionPerformed
        ConfigurationForm configurationForm = new ConfigurationForm(this, false);
        configurationForm.setVisible(true);
    }//GEN-LAST:event_jmiDbAndServerActionPerformed

    /**
     * @param args the command line arguments
     */


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartServer;
    private javax.swing.JButton btnStopServer;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmiDbAndServer;
    private javax.swing.JLabel lblIndex;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblServerStatus;
    private javax.swing.JMenu menuConfig;
    private javax.swing.JTable tblUsers;
    // End of variables declaration//GEN-END:variables

    public void refreshTable() {
        
        if (runServerThread != null && runServerThread.getServerSocket().isBound()){
            List<ProcessClientRequestsThread> clients = runServerThread.getClients();
            List<User> users = new ArrayList<>();
            for (ProcessClientRequestsThread client : clients) {
                if(client.isAlive() && client.getUser() != null){
                    users.add(client.getUser());
                }
            }
            
            ServerTableModel model = new ServerTableModel(users);
            tblUsers.setModel(model);
        }
    }
}
